# -*- coding: utf-8 -*-
"""TarefaImageSaberPaisagem .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yDknIjPxgT5chHInY4XJsBWXQwNuuTRp
"""

import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing.image import load_img, img_to_array
import numpy as np

image_paths = {
    'Paisagem Diurna': '/content/drive/MyDrive/PaisagensDia/imagensDia/paisagem10.jpeg',
    'Final da Tarde':'/content/drive/MyDrive/PaisagensNoite/imagensNoite/paisagem30.jpeg',
}

class_names = {
    0: 'Paisagem Diurna',
    1: 'Final da Tarde',
}

imgs = []
img_arrays = []
for class_name, img_path in image_paths.items():  # Iterar pelo dicionário
    img = load_img(img_path, target_size=(150, 150))
    imgs.append(img)
    img_array = img_to_array(img) / 255.0
    img_array = img_array.reshape((1, 150, 150, 3))
    img_arrays.append(img_array)

fig, axes = plt.subplots(1, 2, figsize=(10, 5))

for i, (class_name, img_path) in enumerate(image_paths.items()):  # Iterar novamente
    axes[i].imshow(imgs[i])  # Exibir a imagem original

    # Fazer a previsão (opcional, se quiser mostrar a previsão real também)
    prediction = model.predict(img_arrays[i])
    predicted_class_index = int(prediction[0][0] > 0.5)
    predicted_class_name = class_names[predicted_class_index]

    # Definir o título com o nome da classe desejado
    axes[i].set_title(f"Prediction: {class_name}")  # Usar o nome da classe do dicionário
    axes[i].axis('off')

plt.show()

model.save('TarefaModelo.keras')